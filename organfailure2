
SynthDef(\killer, { |amp = 0.005, freq = 0 |
	var data =  SinOsc.ar(freq + 30 , 0, amp * EnvGen.kr(Env.perc  (0.1, 0.0, 0.5, 1))) ;
	Out.ar(0, data ! 2);
}).store; 

SynthDef(\sine, { |amp = 0.005, freq = 0, lfofreq = 10|
	var data = SinOsc.ar(freq + 100, 0, amp);
	Out.ar(0, data ! 2);
}).store; 
/////////////////
SynthDef("pitchFollow1",{ 
var in, amp, freq, hasFreq, out; 
in = Mix.new(SoundIn.ar([0,1])); 
amp = Amplitude.kr(in, 0.05, 0.05) * 0.45 ; 
# freq, hasFreq = Pitch.kr(in, ampThreshold: 0.02, median: 7); 
//freq = Lag.kr(freq.cpsmidi.round(1).midicps, 0.05); 
out = Mix.new(VarSaw.ar(freq * [0.5,1,2], 0, LFNoise1.kr(0.3,0.1,0.1), amp)); 
6.do({ 
out = AllpassN.ar(out, 0.040, [0.040.rand,0.040.rand], 2) 
}); 
Out.ar(0,out) 
}).play(s); 
//////////

var the_port_p5_is_listening_on = 12000;
n = NetAddr("127.0.0.1", the_port_p5_is_listening_on);  /// the preferred code
o = OSCresponderNode(s.addr, '/amp', { |time, resp, msg|
        n.sendMsg('/amp', msg[3]);
}).add;

a = {
        var amp = Amplitude.kr(SoundIn.ar(0));
        SendReply.kr(Impulse.kr(15), '/amp', amp);
        
}.play; 

 

)            



{SinOsc.ar(1,0,1)}.play         